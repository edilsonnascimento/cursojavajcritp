01 - Quebrando o código em arquivos diferentes
Dividio o código uma função para cada arquivo js

02 - Agulha no palheiro!
Muitas funções em um arquivo, dificulta a manutenção e gera retrabalho.

03 - Criando funções
Quebrando em funções para ser reaproveitado em outros arquivos js.

exemplo a função abaixo:
function calculaImc(peso, altura){
   var imc = peso / ( altura * altura);
   return imc.toFixed(2);
}

sendo aproveitada no arquivo form.js
imcTd.textContent = calculaImc(peso, altura);


function obtemPacienteDoFormulario(form){

    return paciente = {
                nome: form.nome.value,
                peso: form.peso.value,
                altura: form.altura.value,
                gordura: form.gordura.value
            }
}

04 - Criando um objeto paciente
paciente = {
    nome: form.nome.value,
    peso: form.peso.value,
    altura: form.altura.value,
    gordura: form.gordura.value
}

05 - Objeto inválido
O que está errado com o objeto Javascript abaixo ?
var carro = {
    cor = "azul",
    modelo = "fusca",
    marca = "Volkswagen",
    kms = 10000,
    combustivel = "gasolina"
}

Deveria ser com ":" e não "="
var carro = {
    cor: "azul",
    modelo: "fusca",
    marca: "Volkswagen",
    kms: 10000,
    combustivel: "gasolina"
}

06 - Melhorando ainda mais o código
Criando mais funções

07 - Sobre boas práticas de código
Melhora legibilidade, manutenção e reaproveitamento de código.

08 - Quebrando o problema em partes menores
Exemplo de como melhorar o código
<button class="botao">Calcula</button>
<input class="numero">
<input class="tabuada">
<span class="resultado"></span>
<script>
    var botao = document.querySelector('.botao');
    var numero = document.querySelector('.numero');
    var tabuada = document.querySelector('.tabuada');
    var resultado = document.querySelector('.resultado');
    botao.addEventListener('click', function() {
        resultado.textContent = numero.value * tabuada.value;
    });
</script>

<button class="botao">Calcula</button><input class="numero"><input class="tabuada"><span class="resultado"></span>
<script>
    function buscaElemento(seletor) {
        return document.querySelector(seletor);
    }
    function aplicaTabuada(numero, tabuada) {

        return numero * tabuada;
    }
    var botao = buscaElemento('.botao');
    var numero = buscaElemento('.numero');
    var tabuada = buscaElemento('.tabuada');
    var resultado = buscaElemento('.resultado');
    botao.addEventListener('click', function() {
        resultado.textContent = aplicaTabuada(numero.value, tabuada.value);
    });
</script>


09-Separando responsabilidades
Outro exemplo de como reorganizar o código.


10 - Mãos na massa: organizando o código em vários arquivos
Importados.





